@@ -68,6 +68,7 @@ UNITTEST_START
     { "192.160.0.1", "10.0.0.1", 0, FALSE},
     { NULL, NULL, 0, FALSE} /* end marker */
   };
+#ifdef USE_IPV6
   struct check list6[]= {
     { "::1", "::1", 0, TRUE},
     { "::1", "::1", 128, TRUE},
@@ -76,6 +77,7 @@ UNITTEST_START
     { "fe80::ab47:4396:55c9:8474", "fe80::ab47:4396:55c9:8474", 64, TRUE},
     { NULL, NULL, 0, FALSE} /* end marker */
   };
+#endif
   struct noproxy list[]= {
     { "www.example.com", "localhost .example.com .example.de", FALSE},
     { "www.example.com", "localhost,.example.com,.example.de", TRUE},
@@ -113,6 +115,7 @@ UNITTEST_START
     { "192.168.1.1", "192.168.0.0/33", FALSE},
     { "192.168.1.1", "foo, bar, 192.168.0.0/24", FALSE},
     { "192.168.1.1", "foo, bar, 192.168.0.0/16", TRUE},
+#ifdef USE_IPV6
     { "[::1]", "foo, bar, 192.168.0.0/16", FALSE},
     { "[::1]", "foo, bar, ::1/64", TRUE},
     { "[::1]", "::1/64", TRUE},
@@ -121,6 +124,7 @@ UNITTEST_START
     { "bar", "foo, bar, ::1/64", TRUE},
     { "BAr", "foo, bar, ::1/64", TRUE},
     { "BAr", "foo,,,,,              bar, ::1/64", TRUE},
+#endif
     { "www.example.com", "foo, .example.com", TRUE},
     { "www.example.com", "www2.example.com, .example.net", FALSE},
     { "example.com", ".example.com, .example.net", TRUE},
@@ -136,6 +140,7 @@ UNITTEST_START
       err++;
     }
   }
+#ifdef USE_IPV6
   for(i = 0; list6[i].a; i++) {
     bool match = Curl_cidr6_match(list6[i].a, list6[i].n, list6[i].bits);
     if(match != list6[i].match) {
@@ -145,6 +150,7 @@ UNITTEST_START
       err++;
     }
   }
+#endif
   for(i = 0; list[i].a; i++) {
     bool match = Curl_check_noproxy(list[i].a, list[i].n);
     if(match != list[i].match) {
