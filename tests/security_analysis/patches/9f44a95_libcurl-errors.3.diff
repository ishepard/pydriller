@@ -21,7 +21,7 @@
 .\" * $Id$
 .\" **************************************************************************
 .\"
-.TH libcurl-errors 3 "8 May 2007" "libcurl 7.16.3" "libcurl errors"
+.TH libcurl-errors 3 "30 Aug 2007" "libcurl 7.17.0" "libcurl errors"
 .SH NAME
 libcurl-errors \- error codes in libcurl
 .SH DESCRIPTION
@@ -48,8 +48,6 @@ Very early initialization code failed. This is likely to be an internal error
 or problem.
 .IP "CURLE_URL_MALFORMAT (3)"
 The URL was not properly formatted.
-.IP "CURLE_URL_MALFORMAT_USER (4)"
-This is never returned by current libcurl.
 .IP "CURLE_COULDNT_RESOLVE_PROXY (5)"
 Couldn't resolve proxy. The given proxy host could not be resolved.
 .IP "CURLE_COULDNT_RESOLVE_HOST (6)"
@@ -60,17 +58,12 @@ Failed to connect() to host or proxy.
 After connecting to an FTP server, libcurl expects to get a certain reply
 back. This error code implies that it got a strange or bad reply. The given
 remote server is probably not an OK FTP server.
-.IP "CURLE_FTP_ACCESS_DENIED (9)"
-We were denied access when trying to login to an FTP server or when trying to
-change working directory to the one given in the URL.
-.IP "CURLE_FTP_USER_PASSWORD_INCORRECT (10)"
-This is never returned by current libcurl.
+.IP "CURLE_REMOTE_ACCESS_DENIED (9)"
+We were denied access to the resource given in the URL.  For FTP, this occurs
+while trying to change to the remote directory.
 .IP "CURLE_FTP_WEIRD_PASS_REPLY (11)"
 After having sent the FTP password to the server, libcurl expects a proper
 reply. This error code indicates that an unexpected code was returned.
-.IP "CURLE_FTP_WEIRD_USER_REPLY (12)"
-After having sent user name to the FTP server, libcurl expects a proper
-reply. This error code indicates that an unexpected code was returned.
 .IP "CURLE_FTP_WEIRD_PASV_REPLY (13)"
 libcurl failed to get a sensible result back from the server as a response to
 either a PASV or a EPSV command. The server is flawed.
@@ -79,11 +72,8 @@ FTP servers return a 227-line as a response to a PASV command. If libcurl
 fails to parse that line, this return code is passed back.
 .IP "CURLE_FTP_CANT_GET_HOST (15)"
 An internal failure to lookup the host used for the new connection.
-.IP "CURLE_FTP_CANT_RECONNECT (16)"
-A bad return code on either PASV or EPSV was sent by the FTP server,
-preventing libcurl from being able to continue.
-.IP "CURLE_FTP_COULDNT_SET_BINARY (17)"
-Received an error when trying to set the transfer mode to binary.
+.IP "CURLE_FTP_COULDNT_SET_TYPE (17)"
+Received an error when trying to set the transfer mode to binary or ascii.
 .IP "CURLE_PARTIAL_FILE (18)"
 A file transfer was shorter or larger than expected. This happens when the
 server first reports an expected transfer size, and then delivers data that
@@ -91,12 +81,10 @@ doesn't match the previously given size.
 .IP "CURLE_FTP_COULDNT_RETR_FILE (19)"
 This was either a weird reply to a 'RETR' command or a zero byte transfer
 complete.
-.IP "CURLE_FTP_WRITE_ERROR (20)"
-After a completed file transfer, the FTP server did not respond a proper
-\"transfer successful\" code.
-.IP "CURLE_FTP_QUOTE_ERROR (21)"
+.IP "CURLE_QUOTE_ERROR (21)"
 When sending custom "QUOTE" commands to the remote server, one of the commands
-returned an error code that was 400 or higher.
+returned an error code that was 400 or higher (for FTP) or otherwise
+indicated unsuccessful completion of the command.
 .IP "CURLE_HTTP_RETURNED_ERROR (22)"
 This is returned if CURLOPT_FAILONERROR is set TRUE and the HTTP server
 returns an error code that is >= 400. (This error code was formerly known as
@@ -104,34 +92,27 @@ CURLE_HTTP_NOT_FOUND.)
 .IP "CURLE_WRITE_ERROR (23)"
 An error occurred when writing received data to a local file, or an error was
 returned to libcurl from a write callback.
-.IP "CURLE_MALFORMAT_USER (24)"
-This is never returned by current libcurl.
 .IP "CURLE_UPLOAD_FAILED (25)"
-Failed starting the upload. For FTP, the server typcially denied the STOR
+Failed starting the upload. For FTP, the server typically denied the STOR
 command. The error buffer usually contains the server's explanation to this.
 (This error code was formerly known as CURLE_FTP_COULDNT_STOR_FILE.)
 .IP "CURLE_READ_ERROR (26)"
 There was a problem reading a local file or an error returned by the read
 callback.
 .IP "CURLE_OUT_OF_MEMORY (27)"
-Out of memory. A memory allocation request failed. This is serious badness and
+A memory allocation request failed. This is serious badness and
 things are severely screwed up if this ever occur.
-.IP "CURLE_OPERATION_TIMEOUTED (28)"
+.IP "CURLE_OPERATION_TIMEDOUT (28)"
 Operation timeout. The specified time-out period was reached according to the
 conditions.
-.IP "CURLE_FTP_COULDNT_SET_ASCII (29)"
-libcurl failed to set ASCII transfer type (TYPE A).
 .IP "CURLE_FTP_PORT_FAILED (30)"
 The FTP PORT command returned error. This mostly happen when you haven't
 specified a good enough address for libcurl to use. See \fICURLOPT_FTPPORT\fP.
 .IP "CURLE_FTP_COULDNT_USE_REST (31)"
 The FTP REST command returned error. This should never happen if the server is
 sane.
-.IP "CURLE_FTP_COULDNT_GET_SIZE (32)"
-The FTP SIZE command returned error. SIZE is not a kosher FTP command, it is
-an extension and not all servers support it. This is not a surprising error.
-.IP "CURLE_HTTP_RANGE_ERROR (33)"
-The HTTP server does not support or accept range requests.
+.IP "CURLE_RANGE_ERROR (33)"
+The server does not support or accept range requests.
 .IP "CURLE_HTTP_POST_ERROR (34)"
 This is an odd error that mainly occurs due to internal confusion.
 .IP "CURLE_SSL_CONNECT_ERROR (35)"
@@ -148,23 +129,17 @@ path doesn't identify an existing file. Did you check file permissions?
 LDAP cannot bind. LDAP bind operation failed.
 .IP "CURLE_LDAP_SEARCH_FAILED (39)"
 LDAP search failed.
-.IP "CURLE_LIBRARY_NOT_FOUND (40)"
-Library not found. The LDAP library was not found.
 .IP "CURLE_FUNCTION_NOT_FOUND (41)"
-Function not found. A required LDAP function was not found.
+Function not found. A required zlib function was not found.
 .IP "CURLE_ABORTED_BY_CALLBACK (42)"
 Aborted by callback. A callback returned "abort" to libcurl.
 .IP "CURLE_BAD_FUNCTION_ARGUMENT (43)"
 Internal error. A function was called with a bad parameter.
-.IP "CURLE_BAD_CALLING_ORDER (44)"
-This is never returned by current libcurl.
 .IP "CURLE_INTERFACE_FAILED (45)"
 Interface error. A specified outgoing interface could not be used. Set which
 interface to use for outgoing connections' source IP address with
 CURLOPT_INTERFACE. (This error code was formerly known as
 CURLE_HTTP_PORT_FAILED.)
-.IP "CURLE_BAD_PASSWORD_ENTERED (46)"
-This is never returned by current libcurl.
 .IP "CURLE_TOO_MANY_REDIRECTS (47)"
 Too many redirects. When following redirects, libcurl hit the maximum amount.
 Set your limit with CURLOPT_MAXREDIRS.
@@ -173,9 +148,6 @@ An option set with CURLOPT_TELNETOPTIONS was not recognized/known. Refer to
 the appropriate documentation.
 .IP "CURLE_TELNET_OPTION_SYNTAX (49)"
 A telnet option string was Illegally formatted.
-.IP "CURLE_OBSOLETE (50)"
-This is not an error. This used to be another error code in an old libcurl
-version and is currently unused.
 .IP "CURLE_SSL_PEER_CERTIFICATE (51)"
 The remote server's SSL certificate was deemed not OK.
 .IP "CURLE_GOT_NOTHING (52)"
@@ -189,14 +161,12 @@ Failed setting the selected SSL crypto engine as default!
 Failed sending network data.
 .IP "CURLE_RECV_ERROR (56)"
 Failure with receiving network data.
-.IP "CURLE_SHARE_IN_USE (57)"
-Share is in use
 .IP "CURLE_SSL_CERTPROBLEM (58)"
 problem with the local client certificate
 .IP "CURLE_SSL_CIPHER (59)"
-couldn't use specified cipher
+Couldn't use specified cipher
 .IP "CURLE_SSL_CACERT (60)"
-peer certificate cannot be authenticated with known CA certificates
+Peer certificate cannot be authenticated with known CA certificates
 .IP "CURLE_BAD_CONTENT_ENCODING (61)"
 Unrecognized transfer encoding
 .IP "CURLE_LDAP_INVALID_URL (62)"
@@ -214,24 +184,33 @@ Initiating the SSL Engine failed
 The remote server denied curl to login (Added in 7.13.1)
 .IP "CURLE_TFTP_NOTFOUND (68)"
 File not found on TFTP server
-.IP "CURLE_TFTP_PERM (69"
+.IP "CURLE_TFTP_PERM (69)"
 Permission problem on TFTP server
-.IP "CURLE_TFTP_DISKFULL (70)"
-Out of disk space on TFTP server
+.IP "CURLE_REMOTE_DISK_FULL (70)"
+Out of disk space on the server
 .IP "CURLE_TFTP_ILLEGAL (71)"
 Illegal TFTP operation
 .IP "CURLE_TFTP_UNKNOWNID (72)"
 Unknown TFTP transfer ID
-.IP "CURLE_TFTP_EXISTS (73)"
-TFTP File already exists
+.IP "CURLE_REMOTE_FILE_EXISTS (73)"
+File already exists and will not be overwritten
 .IP "CURLE_TFTP_NOSUCHUSER (74)"
-No such TFTP user
+This error should never be returned by a properly functioning TFTP server
 .IP "CURLE_CONV_FAILED (75)"
 Character conversion failed
 .IP "CURLE_CONV_REQD (76)"
 Caller must register conversion callbacks
 .IP "CURLE_SSL_CACERT_BADFILE (77)"
 Problem with reading the SSL CA cert (path? access rights?)
+.IP "CURLE_REMOTE_FILE_NOT_FOUND (78)"
+The resource referenced in the URL does not exist
+.IP "CURLE_SSH (79)"
+An unspecified error occurred during the SSH session
+.IP "CURLE_SSL_SHUTDOWN_FAILED (80)"
+Failed to shut down the SSL connection
+.IP "CURLE_OBSOLETE*"
+These error codes will never be returned. They used to be used in an old libcurl
+version and are currently unused.
 .SH "CURLMcode"
 This is the generic return code used by functions in the libcurl multi
 interface. Also consider \fIcurl_multi_strerror(3)\fP.
@@ -253,6 +232,9 @@ This can only be returned if libcurl bugs. Please report it to us!
 .IP "CURLM_BAD_SOCKET (5)"
 The passed-in socket is not a valid one that libcurl already knows about.
 (Added in 7.15.4)
+.IP "CURLM_UNKNOWN_OPTION (6)"
+curl_multi_setopt() with unsupported option
+(Added in 7.15.4)
 .SH "CURLSHcode"
 The "share" interface will return a CURLSHcode to indicate when an error has
 occurred.  Also consider \fIcurl_share_strerror(3)\fP.
@@ -264,4 +246,6 @@ An invalid option was passed to the function.
 The share object is currently in use.
 .IP "CURLSHE_INVALID (3)"
 An invalid share object was passed to the function.
-
+.IP "CURLSHE_NOMEM (4)"
+Not enough memory was available.
+(Added in 7.12.0)
