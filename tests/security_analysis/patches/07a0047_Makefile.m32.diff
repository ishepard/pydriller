@@ -24,87 +24,58 @@
 
 ###########################################################################
 #
-## Makefile for building curl.exe with MinGW (GCC-3.2 or later or LLVM/Clang)
-## and optionally OpenSSL (1.0.2a), libssh2 (1.5), zlib (1.2.8), librtmp (2.4),
-## brotli (1.0.1), zstd (1.4.5)
-##
-## Usage:   mingw32-make -f Makefile.m32 CFG=-feature1[-feature2][-feature3][...]
-## Example: mingw32-make -f Makefile.m32 CFG=-zlib-ssl-sspi-winidn
-##
-## Hint: you can also set environment vars to control the build, e.g.:
-## set ZLIB_PATH=c:/zlib-1.2.8
-## set ZLIB=1
+# Makefile for building curl.exe with MinGW and optional features.
+#
+# Usage:   mingw32-make -f Makefile.m32 CFG=-feature1[-feature2][-feature3][...]
+# Example: mingw32-make -f Makefile.m32 CFG=-zlib-ssl-sspi-winidn
+#
+# Hint: you can also set environment vars to control the build, e.g.:
+# set ZLIB_PATH=C:/zlib
+# set ZLIB=1
 #
 ###########################################################################
 
-# Edit the path below to point to the base of your Zlib sources.
+PROOT = ..
+
 ifndef ZLIB_PATH
-ZLIB_PATH = ../../zlib-1.2.8
+ZLIB_PATH = $(PROOT)/../zlib
 endif
-# Edit the path below to point to the base of your Zstandard sources.
 ifndef ZSTD_PATH
-ZSTD_PATH = ../../zstd-1.4.5
+ZSTD_PATH = $(PROOT)/../zstd
 endif
-# Edit the path below to point to the base of your Brotli sources.
 ifndef BROTLI_PATH
-BROTLI_PATH = ../../brotli-1.0.1
+BROTLI_PATH = $(PROOT)/../brotli
 endif
-# Edit the path below to point to the base of your OpenSSL package.
 ifndef OPENSSL_PATH
-OPENSSL_PATH = ../../openssl-1.0.2a
+OPENSSL_PATH = $(PROOT)/../openssl
 endif
-# Edit the path below to point to the base of your LibSSH2 package.
 ifndef LIBSSH2_PATH
-LIBSSH2_PATH = ../../libssh2-1.5.0
+LIBSSH2_PATH = $(PROOT)/../libssh2
 endif
-# Edit the path below to point to the base of your librtmp package.
 ifndef LIBRTMP_PATH
-LIBRTMP_PATH = ../../librtmp-2.4
-endif
-# Edit the path below to point to the base of your libexpat package.
-ifndef LIBEXPAT_PATH
-LIBEXPAT_PATH = ../../expat-2.1.0
+LIBRTMP_PATH = $(PROOT)/../librtmp
 endif
-# Edit the path below to point to the base of your libxml2 package.
-ifndef LIBXML2_PATH
-LIBXML2_PATH = ../../libxml2-2.9.2
-endif
-# Edit the path below to point to the base of your libgsasl package.
 ifndef LIBGSASL_PATH
-LIBGSASL_PATH = ../../libgsasl-1.10.0
+LIBGSASL_PATH = $(PROOT)/../gsasl
 endif
-# Edit the path below to point to the base of your libidn2 package.
 ifndef LIBIDN2_PATH
-LIBIDN2_PATH = ../../libidn2-2.0.3
-endif
-# Edit the path below to point to the base of your MS IDN package.
-# Microsoft Internationalized Domain Names (IDN) Mitigation APIs 1.1
-# https://www.microsoft.com/en-us/download/details.aspx?id=734
-ifndef WINIDN_PATH
-WINIDN_PATH = ../../Microsoft IDN Mitigation APIs
+LIBIDN2_PATH = $(PROOT)/../libidn2
 endif
-# Edit the path below to point to the base of your Novell LDAP NDK.
+# https://www.novell.com/developer/ndk/ldap_libraries_for_c.html
 ifndef LDAP_SDK
-LDAP_SDK = c:/novell/ndk/cldapsdk/win32
+LDAP_SDK = $(PROOT)/../openldapsdk
 endif
-# Edit the path below to point to the base of your nghttp2 package.
 ifndef NGHTTP2_PATH
-NGHTTP2_PATH = ../../nghttp2-1.0.0
+NGHTTP2_PATH = $(PROOT)/../nghttp2
 endif
-# Edit the path below to point to the base of your nghttp3 package.
 ifndef NGHTTP3_PATH
-NGHTTP3_PATH = ../../nghttp3-1.0.0
+NGHTTP3_PATH = $(PROOT)/../nghttp3
 endif
-# Edit the path below to point to the base of your ngtcp2 package.
 ifndef NGTCP2_PATH
-NGTCP2_PATH = ../../ngtcp2-1.0.0
+NGTCP2_PATH = $(PROOT)/../ngtcp2
 endif
-
-PROOT = ..
-
-# Edit the path below to point to the base of your c-ares package.
 ifndef LIBCARES_PATH
-LIBCARES_PATH = $(PROOT)/ares
+LIBCARES_PATH = $(PROOT)/../c-ares
 endif
 
 ifeq ($(CURL_CC),)
@@ -116,21 +87,12 @@ endif
 ifeq ($(CURL_RC),)
 CURL_RC := $(CROSSPREFIX)windres
 endif
-ifeq ($(CURL_STRIP),)
-CURL_STRIP := $(CROSSPREFIX)strip
-endif
 
 CC = $(CURL_CC)
 CFLAGS = -O3 $(CURL_CFLAG_EXTRAS) -W -Wall
 LDFLAGS = $(CURL_LDFLAG_EXTRAS) $(CURL_LDFLAG_EXTRAS_EXE)
-AR = $(CURL_AR)
 RC = $(CURL_RC)
-RCFLAGS = --include-dir=$(PROOT)/include -O coff -DCURL_EMBED_MANIFEST $(CURL_RCFLAG_EXTRAS)
-STRIP   = $(CURL_STRIP) -g
-
-# We may need these someday
-# PERL = perl
-# NROFF = nroff
+RCFLAGS = -I$(PROOT)/include -O coff -DCURL_EMBED_MANIFEST $(CURL_RCFLAG_EXTRAS)
 
 # Set environment var ARCH to your architecture to override autodetection.
 ifndef ARCH
@@ -145,11 +107,11 @@ ifneq ($(ARCH),custom)
 ifeq ($(ARCH),w64)
 CFLAGS  += -m64
 LDFLAGS += -m64
-RCFLAGS += -F pe-x86-64
+RCFLAGS += --target=pe-x86-64
 else
 CFLAGS  += -m32
 LDFLAGS += -m32
-RCFLAGS += -F pe-i386
+RCFLAGS += --target=pe-i386
 endif
 endif
 
@@ -159,7 +121,6 @@ DEL     = rm -f $1
 RMDIR   = rm -fr $1
 MKDIR   = mkdir -p $1
 COPY    = -cp -afv $1 $2
-#COPYR  = -cp -afr $1/* $2
 COPYR   = -rsync -aC $1/* $2
 TOUCH   = touch $1
 CAT     = cat
@@ -255,7 +216,7 @@ ifneq ($(SSH2)$(RTMP),)
   endif
 endif
 
-INCLUDES = -I. -I../include -I../lib
+INCLUDES = -I. -I$(PROOT)/include -I$(PROOT)/lib
 ifdef SSL
   ifdef SCHANNEL
     CFLAGS += -DCURL_WITH_MULTI_SSL
@@ -279,9 +240,6 @@ ifdef SYNC
   CFLAGS += -DUSE_SYNC_DNS
 else
   ifdef ARES
-    ifndef DYN
-      curl_DEPENDENCIES += $(LIBCARES_PATH)/libcares.a
-    endif
     CFLAGS += -DUSE_ARES -DCARES_STATICLIB
     curl_LDADD += -L"$(LIBCARES_PATH)" -lcares
   endif
@@ -297,11 +255,6 @@ endif
 ifdef SSH2
   CFLAGS += -DUSE_LIBSSH2 -DHAVE_LIBSSH2_H
   curl_LDADD += -L"$(LIBSSH2_PATH)/win32" -lssh2
-  ifdef SCHANNEL
-    ifndef DYN
-      curl_LDADD += -lcrypt32
-    endif
-  endif
 endif
 ifdef NGHTTP3
   CFLAGS += -DUSE_NGHTTP3
@@ -322,6 +275,7 @@ endif
 ifdef SSL
   ifndef OPENSSL_INCLUDE
     ifeq "$(wildcard $(OPENSSL_PATH)/outinc)" "$(OPENSSL_PATH)/outinc"
+      # OpenSSL 1.0.2 and earlier
       OPENSSL_INCLUDE = $(OPENSSL_PATH)/outinc
     endif
     ifeq "$(wildcard $(OPENSSL_PATH)/include)" "$(OPENSSL_PATH)/include"
@@ -334,25 +288,23 @@ ifdef SSL
   ifndef OPENSSL_LIBPATH
     OPENSSL_LIBS = -lssl -lcrypto
     ifeq "$(wildcard $(OPENSSL_PATH)/out)" "$(OPENSSL_PATH)/out"
+      # OpenSSL 1.0.2 and earlier
       OPENSSL_LIBPATH = $(OPENSSL_PATH)/out
-      ifdef DYN
-        OPENSSL_LIBS = -lssl32 -leay32
+      OPENSSL_LIBS = -lssl32 -leay32
+      ifndef DYN
+        OPENSSL_LIBS += -lgdi32
       endif
     endif
     ifeq "$(wildcard $(OPENSSL_PATH)/lib)" "$(OPENSSL_PATH)/lib"
       OPENSSL_LIBPATH = $(OPENSSL_PATH)/lib
     endif
   endif
-  ifndef DYN
-    OPENSSL_LIBS += -lgdi32 -lcrypt32
-  endif
   INCLUDES += -I"$(OPENSSL_INCLUDE)"
   CFLAGS += -DUSE_OPENSSL
   curl_LDADD += -L"$(OPENSSL_LIBPATH)" $(OPENSSL_LIBS)
 endif
 ifdef SCHANNEL
   CFLAGS += -DUSE_SCHANNEL
-  curl_LDADD += -lcrypt32
 endif
 ifdef ZLIB
   INCLUDES += -I"$(ZLIB_PATH)"
@@ -389,7 +341,7 @@ ifdef IDN2
 else
 ifdef WINIDN
   CFLAGS += -DUSE_WIN32_IDN
-  curl_LDADD += -L"$(WINIDN_PATH)" -lnormaliz
+  curl_LDADD += -lnormaliz
 endif
 endif
 ifdef SSPI
@@ -411,37 +363,27 @@ ifdef USE_LDAP_OPENLDAP
 endif
 ifndef USE_LDAP_NOVELL
 ifndef USE_LDAP_OPENLDAP
-curl_LDADD += -lwldap32
+  curl_LDADD += -lwldap32
 endif
 endif
-curl_LDADD += -lws2_32 -lbcrypt
+curl_LDADD += -lws2_32 -lcrypt32 -lbcrypt
 
-# Makefile.inc provides the CSOURCES and HHEADERS defines
+# Makefile.inc provides the CURL_CFILES and CURLX_CFILES defines
 include Makefile.inc
 
-curl_PROGRAMS = curl.exe
+TARGETS = curl.exe
 curl_OBJECTS := $(patsubst %.c,%.o,$(strip $(CURL_CFILES)))
-curlx_OBJECTS := $(patsubst %.c,%.o,$(notdir $(strip $(CURLX_CFILES))))
-curl_OBJECTS += $(curlx_OBJECTS)
+curl_OBJECTS += $(patsubst %.c,%.o,$(notdir $(strip $(CURLX_CFILES))))
 vpath %.c $(PROOT)/lib
 
 RESOURCE = curl.res
 
 
-all: $(curl_PROGRAMS)
-
-curl.exe: $(RESOURCE) $(curl_OBJECTS) $(curl_DEPENDENCIES)
-	$(call DEL, $@)
-	$(CC) $(LDFLAGS) -o $@ $< $(curl_OBJECTS) $(curl_LDADD)
+all: $(TARGETS)
 
-# We don't have nroff normally under win32
-# tool_hugehelp.c: $(PROOT)/docs/MANUAL $(PROOT)/docs/curl.1 mkhelp.pl
-#	@$(call DEL, tool_hugehelp.c)
-# 	$(NROFF) -man $(PROOT)/docs/curl.1 | $(PERL) mkhelp.pl $(PROOT)/docs/MANUAL > tool_hugehelp.c
-
-tool_hugehelp.c:
-	@echo Creating $@
-	@$(call COPY, $@.cvs, $@)
+curl.exe: $(curl_OBJECTS) $(RESOURCE) $(curl_DEPENDENCIES)
+	@$(call DEL, $@)
+	$(CC) $(LDFLAGS) -o $@ $(curl_OBJECTS) $(RESOURCE) $(curl_LDADD)
 
 %.o: %.c
 	$(CC) $(INCLUDES) $(CFLAGS) -c $<
@@ -450,10 +392,7 @@ tool_hugehelp.c:
 	$(RC) $(RCFLAGS) -i $< -o $@
 
 clean:
-ifeq "$(wildcard tool_hugehelp.c.cvs)" "tool_hugehelp.c.cvs"
-	@$(call DEL, tool_hugehelp.c)
-endif
-	@$(call DEL, $(curl_OBJECTS) $(curlx_OBJECTS) $(RESOURCE))
+	@$(call DEL, $(curl_OBJECTS) $(RESOURCE))
 
 distclean vclean: clean
-	@$(call DEL, $(curl_PROGRAMS))
+	@$(call DEL, $(TARGETS))
