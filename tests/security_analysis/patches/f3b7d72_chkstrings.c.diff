@@ -25,11 +25,12 @@
 #include "curl_setup.h"
 #include "urldata.h"
 
-/* The following defines indicate the expected dupstring enum values
- * in curl_easy_setopt_ccsid() in packages/OS400/ccsidcurl.c. If a
- * mismatch is flagged during the build, it indicates that curl_easy_setopt_ccsid()
- * may need updating to perform data EBCDIC to ASCII data conversion on
- * the string.
+/* The following defines indicate the expected dupstring enum values in
+ * curl_easy_setopt_ccsid() in packages/OS400/ccsidcurl.c. If a mismatch is
+ * flagged during the build, it indicates that curl_easy_setopt_ccsid() may
+ * need updating to perform data EBCDIC to ASCII data conversion on the
+ * string.
+ *
  * Once any applicable changes to curl_easy_setopt_ccsid() have been
  * made, the EXPECTED_STRING_LASTZEROTERMINATED/EXPECTED_STRING_LAST
  * values can be updated to match the latest enum values in urldata.h.
@@ -41,22 +42,21 @@ int main(int argc, char *argv[])
 {
   int rc = 0;
 
-  if (STRING_LASTZEROTERMINATED != EXPECTED_STRING_LASTZEROTERMINATED)
-  {
-    fprintf(stderr,"STRING_LASTZEROTERMINATED(%d) is not expected value(%d).\n",
+  if(STRING_LASTZEROTERMINATED != EXPECTED_STRING_LASTZEROTERMINATED) {
+    fprintf(stderr,
+            "STRING_LASTZEROTERMINATED(%d) is not expected value(%d).\n",
             STRING_LASTZEROTERMINATED, EXPECTED_STRING_LASTZEROTERMINATED);
     rc += 1;
   }
-  if (STRING_LAST != EXPECTED_STRING_LAST)
-  {
-    fprintf(stderr,"STRING_LAST(%d) is not expected value(%d).\n",
+  if(STRING_LAST != EXPECTED_STRING_LAST) {
+    fprintf(stderr, "STRING_LAST(%d) is not expected value(%d).\n",
             STRING_LAST, EXPECTED_STRING_LAST);
     rc += 2;
   }
-  if (rc != 0)
-  {
-    fprintf(stderr,"curl_easy_setopt_ccsid() in packages/OS400/ccsidcurl.c"
-            " may need updating if new strings are provided as input via the curl API.\n");
+  if(rc) {
+    fprintf(stderr, "curl_easy_setopt_ccsid() in packages/OS400/ccsidcurl.c"
+            " may need updating if new strings are provided as"
+            " input via the curl API.\n");
   }
   return rc;
 }
