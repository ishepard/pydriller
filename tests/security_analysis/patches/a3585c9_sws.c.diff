@@ -902,13 +902,21 @@ static int get_request(curl_socket_t sock, struct httprequest *req)
           int rc;
           fd_set input;
           fd_set output;
-          struct timeval timeout = {1, 0}; /* 1000 ms */
+          struct timeval timeout = {0};
+          timeout.tv_sec = 1; /* 1000 ms */
 
           logmsg("Got EAGAIN from sread");
           FD_ZERO(&input);
           FD_ZERO(&output);
           got = 0;
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
           FD_SET(sock, &input);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
           do {
             logmsg("Wait until readable");
             rc = select((int)sock + 1, &input, &output, NULL, &timeout);
@@ -1375,10 +1383,18 @@ static curl_socket_t connect_to(const char *ipaddr, unsigned short port)
     error = SOCKERRNO;
     if((error == EINPROGRESS) || (error == EWOULDBLOCK)) {
       fd_set output;
-      struct timeval timeout = {1, 0}; /* 1000 ms */
+      struct timeval timeout = {0};
+      timeout.tv_sec = 1; /* 1000 ms */
 
       FD_ZERO(&output);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
       FD_SET(serverfd, &output);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
       while(1) {
         rc = select((int)serverfd + 1, NULL, &output, NULL, &timeout);
         if(rc < 0 && SOCKERRNO != EINTR)
@@ -1488,9 +1504,10 @@ static void http_connect(curl_socket_t *infdp,
 
     fd_set input;
     fd_set output;
-    struct timeval timeout = {1, 0}; /* 1000 ms */
     ssize_t rc;
     curl_socket_t maxfd = (curl_socket_t)-1;
+    struct timeval timeout = {0};
+    timeout.tv_sec = 1; /* 1000 ms */
 
     FD_ZERO(&input);
     FD_ZERO(&output);
@@ -1502,7 +1519,14 @@ static void http_connect(curl_socket_t *infdp,
       /* listener socket is monitored to allow client to establish
          secondary tunnel only when this tunnel is not established
          and primary one is fully operational */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
       FD_SET(rootfd, &input);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
       maxfd = rootfd;
     }
 
@@ -1512,14 +1536,28 @@ static void http_connect(curl_socket_t *infdp,
       if(clientfd[i] != CURL_SOCKET_BAD) {
         if(poll_client_rd[i]) {
           /* unless told not to do so, monitor readability */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
           FD_SET(clientfd[i], &input);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
           if(clientfd[i] > maxfd)
             maxfd = clientfd[i];
         }
         if(poll_client_wr[i] && toc[i]) {
           /* unless told not to do so, monitor writability
              if there is data ready to be sent to client */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
           FD_SET(clientfd[i], &output);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
           if(clientfd[i] > maxfd)
             maxfd = clientfd[i];
         }
@@ -1528,14 +1566,28 @@ static void http_connect(curl_socket_t *infdp,
       if(serverfd[i] != CURL_SOCKET_BAD) {
         if(poll_server_rd[i]) {
           /* unless told not to do so, monitor readability */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
           FD_SET(serverfd[i], &input);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
           if(serverfd[i] > maxfd)
             maxfd = serverfd[i];
         }
         if(poll_server_wr[i] && tos[i]) {
           /* unless told not to do so, monitor writability
              if there is data ready to be sent to server */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
           FD_SET(serverfd[i], &output);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
           if(serverfd[i] > maxfd)
             maxfd = serverfd[i];
         }
@@ -2323,9 +2375,10 @@ int main(int argc, char *argv[])
   for(;;) {
     fd_set input;
     fd_set output;
-    struct timeval timeout = {0, 250000L}; /* 250 ms */
     curl_socket_t maxfd = (curl_socket_t)-1;
     int active;
+    struct timeval timeout = {0};
+    timeout.tv_usec = 250000L; /* 250 ms */
 
     /* Clear out closed sockets */
     for(socket_idx = num_sockets - 1; socket_idx >= 1; --socket_idx) {
@@ -2347,7 +2400,14 @@ int main(int argc, char *argv[])
 
     for(socket_idx = 0; socket_idx < num_sockets; ++socket_idx) {
       /* Listen on all sockets */
+#if defined(__DJGPP__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Warith-conversion"
+#endif
       FD_SET(all_sockets[socket_idx], &input);
+#if defined(__DJGPP__)
+#pragma GCC diagnostic pop
+#endif
       if(all_sockets[socket_idx] > maxfd)
         maxfd = all_sockets[socket_idx];
     }
