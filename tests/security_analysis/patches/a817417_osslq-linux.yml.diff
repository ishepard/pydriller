@@ -1,241 +0,0 @@
-# Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
-#
-# SPDX-License-Identifier: curl
-
-name: osslq-linux
-
-on:
-  push:
-    branches:
-      - master
-      - '*/ci'
-    paths-ignore:
-      - '**/*.md'
-      - '**/CMakeLists.txt'
-      - '.azure-pipelines.yml'
-      - '.circleci/**'
-      - '.cirrus.yml'
-      - 'appveyor.*'
-      - 'CMake/**'
-      - 'packages/**'
-      - 'plan9/**'
-      - 'projects/**'
-      - 'winbuild/**'
-  pull_request:
-    branches:
-      - master
-    paths-ignore:
-      - '**/*.md'
-      - '**/CMakeLists.txt'
-      - '.azure-pipelines.yml'
-      - '.circleci/**'
-      - '.cirrus.yml'
-      - 'appveyor.*'
-      - 'CMake/**'
-      - 'packages/**'
-      - 'plan9/**'
-      - 'projects/**'
-      - 'winbuild/**'
-
-concurrency:
-  # Hardcoded workflow filename as workflow name above is just Linux again
-  group: osslq-${{ github.event.pull_request.number || github.sha }}
-  cancel-in-progress: true
-
-permissions: {}
-
-env:
-  MAKEFLAGS: -j 4
-  # handled in renovate.json
-  openssl3-version: openssl-3.3.0
-  # unhandled
-  quictls-version: 3.1.4+quic
-  # renovate: datasource=github-tags depName=ngtcp2/nghttp3 versioning=semver registryUrl=https://github.com
-  nghttp3-version: 1.3.0
-  # renovate: datasource=github-tags depName=ngtcp2/ngtcp2 versioning=semver registryUrl=https://github.com
-  ngtcp2-version: 1.5.0
-  # renovate: datasource=github-tags depName=nghttp2/nghttp2 versioning=semver registryUrl=https://github.com
-  nghttp2-version: 1.62.1
-  # renovate: datasource=github-tags depName=icing/mod_h2 versioning=semver registryUrl=https://github.com
-  mod_h2-version: 2.0.27
-
-jobs:
-  autotools:
-    name: ${{ matrix.build.name }}
-    runs-on: 'ubuntu-latest'
-    timeout-minutes: 60
-    strategy:
-      fail-fast: false
-      matrix:
-        build:
-          - name: openssl-quic
-            configure: >-
-              PKG_CONFIG_PATH="$HOME/openssl3/lib64/pkgconfig" LDFLAGS="-Wl,-rpath,$HOME/openssl3/lib64"
-              --enable-warnings --enable-werror --enable-debug --disable-ntlm
-              --with-test-nghttpx="$HOME/nghttpx/bin/nghttpx"
-              --with-openssl=$HOME/openssl3 --with-openssl-quic
-              --with-nghttp3=$HOME/nghttpx
-
-    steps:
-      - run: |
-          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
-          sudo apt-get update
-          sudo apt-get install libtool autoconf automake pkg-config stunnel4 \
-            libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev libev-dev libc-ares-dev \
-            nettle-dev libp11-kit-dev libtspi-dev libunistring-dev guile-2.2-dev libtasn1-bin \
-            libtasn1-6-dev libidn2-0-dev gawk gperf libtss2-dev dns-root-data bison gtk-doc-tools \
-            texinfo texlive texlive-extra-utils autopoint libev-dev \
-            apache2 apache2-dev libnghttp2-dev
-          echo 'CC=gcc-12' >> $GITHUB_ENV
-          echo 'CXX=g++-12' >> $GITHUB_ENV
-        name: 'install prereqs and impacket, pytest, crypto, apache2'
-
-      - name: cache openssl3
-        if: contains(matrix.build.install_steps, 'openssl3')
-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
-        id: cache-openssl3
-        env:
-          cache-name: cache-openssl3
-        with:
-          path: /home/runner/openssl3
-          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.openssl3-version }}
-
-      - name: 'install openssl3'
-        if: steps.cache-openssl3.outputs.cache-hit != 'true'
-        run: |
-          git clone --quiet --depth=1 -b ${{ env.openssl3-version }} https://github.com/openssl/openssl
-          cd openssl
-          ./config --prefix=$HOME/openssl3
-          make -j1 install_sw
-          cat exporters/openssl.pc
-
-      - name: cache quictls
-        if: contains(matrix.build.install_steps, 'quictls')
-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
-        id: cache-quictls
-        env:
-          cache-name: cache-quictls
-        with:
-          path: /home/runner/quictls
-          key: ${{ runner.os }}-build-${{ env.cache-name }}-quictls-${{ env.quictls-version }}
-
-      - name: cache quictls
-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
-        id: cache-quictls-no-deprecated
-        env:
-          cache-name: cache-quictls-no-deprecated
-        with:
-          path: /home/runner/quictls
-          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.quictls-version }}
-
-      - if: steps.cache-quictls-no-deprecated.outputs.cache-hit != 'true'
-        run: |
-          cd $HOME
-          git clone --quiet --depth=1 -b openssl-${{ env.quictls-version }} https://github.com/quictls/openssl quictls
-          cd quictls
-          ./config no-deprecated --prefix=$HOME/nghttpx --libdir=$HOME/nghttpx/lib
-          make
-        name: 'build quictls'
-
-      - run: |
-          cd $HOME/quictls
-          make -j1 install_sw
-        name: 'install quictls'
-
-
-      - name: cache nghttp3
-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
-        id: cache-nghttp3
-        env:
-          cache-name: cache-nghttp3
-        with:
-          path: /home/runner/nghttp3
-          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.nghttp3-version }}
-
-      - if: steps.cache-nghttp3.outputs.cache-hit != 'true'
-        run: |
-          cd $HOME
-          git clone --quiet --depth=1 -b v${{ env.nghttp3-version }} https://github.com/ngtcp2/nghttp3
-          cd nghttp3
-          git submodule update --init
-          autoreconf -fi
-          ./configure --disable-dependency-tracking --prefix=$HOME/nghttpx PKG_CONFIG_PATH="$HOME/nghttpx/lib/pkgconfig" --enable-lib-only
-          make
-        name: 'build nghttp3'
-
-      - run: |
-          cd $HOME/nghttp3
-          make install
-        name: 'install nghttp3'
-
-      # depends on all other cached libs built so far
-      - run: |
-          git clone --quiet --depth=1 -b v${{ env.ngtcp2-version }} https://github.com/ngtcp2/ngtcp2
-          cd ngtcp2
-          autoreconf -fi
-          ./configure --disable-dependency-tracking --prefix=$HOME/nghttpx PKG_CONFIG_PATH="$HOME/nghttpx/lib/pkgconfig" --enable-lib-only --with-openssl
-          make install
-        name: 'install ngtcp2'
-
-      # depends on all other cached libs built so far
-      - run: |
-          git clone --quiet --depth=1 -b v${{ env.nghttp2-version }} https://github.com/nghttp2/nghttp2
-          cd nghttp2
-          autoreconf -fi
-          ./configure --disable-dependency-tracking --prefix=$HOME/nghttpx PKG_CONFIG_PATH="$HOME/nghttpx/lib/pkgconfig" --enable-http3
-          make install
-        name: 'install nghttp2'
-
-      - name: cache mod_h2
-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
-        id: cache-mod_h2
-        env:
-          cache-name: cache-mod_h2
-        with:
-          path: /home/runner/mod_h2
-          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.mod_h2-version }}
-
-      - if: steps.cache-mod_h2.outputs.cache-hit != 'true'
-        run: |
-          cd $HOME
-          git clone --quiet --depth=1 -b v${{ env.mod_h2-version }} https://github.com/icing/mod_h2
-          cd mod_h2
-          autoreconf -fi
-          ./configure
-          make
-        name: 'build mod_h2'
-
-      - run: |
-          cd $HOME/mod_h2
-          sudo make install
-        name: 'install mod_h2'
-
-      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
-
-      - run: |
-          sudo python3 -m pip install -r tests/requirements.txt -r tests/http/requirements.txt
-        name: 'install python test prereqs'
-
-      - run: autoreconf -fi
-        name: 'autoreconf'
-
-      - run: ./configure --disable-dependency-tracking ${{ matrix.build.configure }}
-        name: 'configure'
-
-      - run: make V=1
-        name: 'make'
-
-      - run: make V=1 examples
-        name: 'make examples'
-
-      - run: make V=1 -C tests
-        name: 'make tests'
-
-      - run: make V=1 test-ci
-        name: 'run tests'
-
-      - run: pytest -v tests
-        name: 'run pytest'
-        env:
-          TFLAGS: "${{ matrix.build.tflags }}"
-          CURL_CI: github
