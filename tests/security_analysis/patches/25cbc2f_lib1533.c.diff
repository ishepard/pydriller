@@ -106,7 +106,7 @@ static int perform_and_check_connections(CURL *curl, const char *description,
 
   res = curl_easy_perform(curl);
   if(res != CURLE_OK) {
-    fprintf(stderr, "curl_easy_perform() failed with %d\n", (int)res);
+    fprintf(stderr, "curl_easy_perform() failed with %d\n", res);
     return TEST_ERR_MAJOR_BAD;
   }
 
@@ -127,11 +127,12 @@ static int perform_and_check_connections(CURL *curl, const char *description,
 }
 
 
-int test(char *URL)
+CURLcode test(char *URL)
 {
   struct cb_data data;
   CURL *curl = NULL;
-  int res = TEST_ERR_FAILURE;
+  CURLcode res = TEST_ERR_FAILURE;
+  int result;
 
   if(curl_global_init(CURL_GLOBAL_ALL) != CURLE_OK) {
     fprintf(stderr, "curl_global_init() failed\n");
@@ -157,17 +158,19 @@ int test(char *URL)
   test_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);
   test_setopt(curl, CURLOPT_WRITEDATA, &data);
 
-  res = perform_and_check_connections(curl,
+  result = perform_and_check_connections(curl,
     "First request without CURLOPT_KEEP_SENDING_ON_ERROR", 1);
-  if(res != TEST_ERR_SUCCESS) {
+  if(result != TEST_ERR_SUCCESS) {
+    res = (CURLcode) result;
     goto test_cleanup;
   }
 
   reset_data(&data, curl);
 
-  res = perform_and_check_connections(curl,
+  result = perform_and_check_connections(curl,
     "Second request without CURLOPT_KEEP_SENDING_ON_ERROR", 1);
-  if(res != TEST_ERR_SUCCESS) {
+  if(result != TEST_ERR_SUCCESS) {
+    res = (CURLcode) result;
     goto test_cleanup;
   }
 
@@ -175,17 +178,19 @@ int test(char *URL)
 
   reset_data(&data, curl);
 
-  res = perform_and_check_connections(curl,
+  result = perform_and_check_connections(curl,
     "First request with CURLOPT_KEEP_SENDING_ON_ERROR", 1);
-  if(res != TEST_ERR_SUCCESS) {
+  if(result != TEST_ERR_SUCCESS) {
+    res = (CURLcode) result;
     goto test_cleanup;
   }
 
   reset_data(&data, curl);
 
-  res = perform_and_check_connections(curl,
+  result = perform_and_check_connections(curl,
     "Second request with CURLOPT_KEEP_SENDING_ON_ERROR", 0);
-  if(res != TEST_ERR_SUCCESS) {
+  if(result != TEST_ERR_SUCCESS) {
+    res = (CURLcode) result;
     goto test_cleanup;
   }
 
@@ -197,5 +202,5 @@ test_cleanup:
 
   curl_global_cleanup();
 
-  return (int)res;
+  return res;
 }
