@@ -5,7 +5,7 @@
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
@@ -59,7 +59,8 @@ Curl_HMAC_init(const HMAC_params * hashparams,
   unsigned char b;
 
   /* Create HMAC context. */
-  i = sizeof *ctxt + 2 * hashparams->hmac_ctxtsize + hashparams->hmac_resultlen;
+  i = sizeof *ctxt + 2 * hashparams->hmac_ctxtsize +
+    hashparams->hmac_resultlen;
   ctxt = malloc(i);
 
   if(!ctxt)
@@ -84,14 +85,14 @@ Curl_HMAC_init(const HMAC_params * hashparams,
   (*hashparams->hmac_hinit)(ctxt->hmac_hashctxt1);
   (*hashparams->hmac_hinit)(ctxt->hmac_hashctxt2);
 
-  for (i = 0; i < keylen; i++) {
+  for(i = 0; i < keylen; i++) {
     b = (unsigned char)(*key ^ hmac_ipad);
     (*hashparams->hmac_hupdate)(ctxt->hmac_hashctxt1, &b, 1);
     b = (unsigned char)(*key++ ^ hmac_opad);
     (*hashparams->hmac_hupdate)(ctxt->hmac_hashctxt2, &b, 1);
   }
 
-  for (; i < hashparams->hmac_maxkeylen; i++) {
+  for(; i < hashparams->hmac_maxkeylen; i++) {
     (*hashparams->hmac_hupdate)(ctxt->hmac_hashctxt1, &hmac_ipad, 1);
     (*hashparams->hmac_hupdate)(ctxt->hmac_hashctxt2, &hmac_opad, 1);
   }
@@ -114,7 +115,8 @@ int Curl_HMAC_final(HMAC_context * ctxt, unsigned char * result)
 {
   const HMAC_params * hashparams = ctxt->hmac_hash;
 
-  /* Do not get result if called with a null parameter: only release storage. */
+  /* Do not get result if called with a null parameter: only release
+     storage. */
 
   if(!result)
     result = (unsigned char *) ctxt->hmac_hashctxt2 +
