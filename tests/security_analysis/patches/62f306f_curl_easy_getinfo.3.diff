@@ -205,8 +205,19 @@ libcurl close the socket and cleanup other resources associated with the
 handle. This is typically used in combination with
 \fICURLOPT_CONNECT_ONLY(3)\fP.  (Added in 7.15.2)
 
-NOTE: this API is not really working on win64, since the SOCKET type on win64
-is 64 bit large while its 'long' is only 32 bits.
+NOTE: this API is deprecated since it is not working on win64 where the SOCKET
+type is 64 bits large while its 'long' is 32 bits. Use the
+\fICURLINFO_ACTIVESOCKET\fP instead, if possible.
+.IP CURLINFO_ACTIVESOCKET
+Pass a pointer to a curl_socket_t to receive the active socket used by this
+curl session. If the socket is no longer valid, -1 is returned. When you
+finish working with the socket, you must call curl_easy_cleanup() as usual and
+let libcurl close the socket and cleanup other resources associated with the
+handle. This is typically used in combination with
+\fICURLOPT_CONNECT_ONLY(3)\fP.
+
+NOTE: this is meant as a cross-platform, safe alternative to
+\fICURLINFO_LASTSOCKET\fP, which does not work on win64.
 .IP CURLINFO_FTP_ENTRY_PATH
 Pass a pointer to a char pointer to receive a pointer to a string holding the
 path of the entry path. That is the initial path libcurl ended up in when
